[{"content":"Search entries         var search = instantsearch({ indexName: \u0026#39;dejavu\u0026#39;, searchClient: algoliasearch( \u0026#39;IHQSDYOJJ3\u0026#39;, \u0026#39;64d4f3159a43ea358178c7bf5a431819\u0026#39; ), routing: true, }); const renderHits = (renderOptions, isFirstRender) = { const { hits } = renderOptions; document.querySelector(\u0026#39;#hits\u0026#39;).innerHTML = ` ${hits .map( item = `${ item.title }${ dayjs(item.lastmod).format(\u0026#34;YYYY/MM/DD\u0026#34;) } - ${ item.description ? item.description : item.content.length  200 ? item.content.substring( 0, 200 ) + \u0026#39;...\u0026#39; : item.content }\n` ) .join(\u0026#39;\u0026#39;)} `; }; const customHits = instantsearch.connectors.connectHits( renderHits ); search.addWidgets([ instantsearch.widgets.searchBox({ container: \u0026#39;#searchbox\u0026#39;, showReset: false, }), instantsearch.widgets.stats({ container: \u0026#39;#stats\u0026#39;, }), customHits({ container: document.querySelector(\u0026#39;#hits\u0026#39;), }), instantsearch.widgets.pagination({ container: \u0026#39;#pagination\u0026#39;, maxPages: 20, }) ]); search.start();  ","date":1508426775,"description":"Text about this post","lastmod":"2019-10-26T15:26:15Z","objectID":"3976528693a0108357f4928017600865","permalink":"https://falcosuessgott.github.io/dejavu/","publishdate":"2018-11-23T15:26:15Z","title":"Home title"},{"content":"  Ansible  wait for SSH Connection     ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"4e5d81266fd0aa9140bb87efe373e992","permalink":"https://falcosuessgott.github.io/dejavu/ansible/","publishdate":"2017-10-17T15:26:15Z","title":"Ansible"},{"content":"  Ansible  wait for SSH Connection     wait for SSH Connection - name: Install k8s using kubespray hosts: all gather_facts: no pre_tasks: - name: Wait for SSH Connection wait_for_connection: delay: 10 timeout: 300 - name: Gathering facts setup: ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"1f6357095b7e414f659e027836179d3b","permalink":"https://falcosuessgott.github.io/dejavu/ansible/ansible/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"100d5015774f1062d855133f5983ae9e","permalink":"https://falcosuessgott.github.io/dejavu/bash/","publishdate":"2017-10-17T15:26:15Z","title":"Bash"},{"content":"  Bash  remove empty lines  insert/replace directly in file       remove empty lines sed \u0026amp;#39;/^[[:space:]]*$/d\u0026amp;#39; FILE insert/replace directly in file sed -i \u0026amp;#39;/^[[:space:]]*$/d\u0026amp;#39; FILE test port connection $\u0026amp;gt; nc -vz 10.244.1.4 3306 Connection to 10.244.1.4 3306 port [tcp/mysql] succeeded! ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"410a5f40f85a8ec6d833a2b4f777e734","permalink":"https://falcosuessgott.github.io/dejavu/bash/bash/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"54ed7bfbaf807fe3944d91dceb2b9a00","permalink":"https://falcosuessgott.github.io/dejavu/container/","publishdate":"2017-10-17T15:26:15Z","title":"Container"},{"content":"  Docker  bash into container build -\u0026amp;gt; tag -\u0026amp;gt; push image     bash into container docker run --name rpm_test --rm -it centos bash build -\u0026amp;gt; tag -\u0026amp;gt; push image docker build -t go-tito . docker tag go-tito:latest $REGISTRY/$USER/go-tito:latest docker push $REGISTRY/$USER/go-tito:latest ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"22ba772bb46a71a58c74b20246ea8602","permalink":"https://falcosuessgott.github.io/dejavu/container/docker/","publishdate":"2017-10-17T15:26:15Z","title":"Docker"},{"content":"  Podman  Generate Systemd File for Pod/Container      Generate Systemd File for Pod/Container podman create -d $container $args podman generate systemd $container \u0026amp;gt; $container.service mv $container.service ~/.config/systemd/user/. systemctl --user daemon-reload systemctl --user start $container.service ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"373210b0bfd1a331e79d8f2f7acb1479","permalink":"https://falcosuessgott.github.io/dejavu/container/podman/","publishdate":"2017-10-17T15:26:15Z","title":"Podman"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"d26a29335cdbdee1ed1a0645b4641c9a","permalink":"https://falcosuessgott.github.io/dejavu/git/","publishdate":"2017-10-17T15:26:15Z","title":"Git"},{"content":"  Git  delete local and remote tag delete all local and remote tags reset to commit      delete local and remote tag git tag -d v1.1.0 git push --delete origin v1.1.0 delete all local and remote tags for tag in $(git tag -l); do git tag -d $tag \u0026amp;amp;\u0026amp;amp; git push --delete origin $tag; done reset to commit git reset --hard $tagname ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"fd3434d468a728c6b1a3894c3faf9435","permalink":"https://falcosuessgott.github.io/dejavu/git/git/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"fd2e9fff72f821dd121775d8ee9fe63f","permalink":"https://falcosuessgott.github.io/dejavu/go/","publishdate":"2017-10-17T15:26:15Z","title":"Go"},{"content":"  Go  Go Install  Test go get via docker   Slice/Arrays  Sort Slice of struct Sort by time       Go Install Test go get via docker docker run --rm centos:latest bash -c \u0026amp;#34;yum install -y git \u0026amp;amp;\u0026amp;amp; curl -sL https://git.io/vQhTU | bash \u0026amp;amp;\u0026amp;amp; source /root/.bashrc \u0026amp;amp;\u0026amp;amp; go get github.com/FalcoSuessgott/tago \u0026amp;amp;\u0026amp;amp; tago --version\u0026amp;#34; as alias in .bash_profile\ngoinstall(){ docker run --rm centos:latest bash -c \u0026amp;#34;yum install -y git \u0026amp;amp;\u0026amp;amp; curl -sL https://git.io/vQhTU | bash \u0026amp;amp;\u0026amp;amp; source /root/.bashrc \u0026amp;amp;\u0026amp;amp; go get github.com/$1\u0026amp;amp;\u0026amp;amp; $(echo $1 | cut -d \u0026amp;#34;/\u0026amp;#34; -f2)--version\u0026amp;#34; } goinstall FalcoSuessgott/tago\nSlice/Arrays Sort Slice of struct sort.Slice(planets[:], func(i, j int) bool { return planets[i].Axis \u0026amp;lt; planets[j].Axis }) Sort by time sort.Slice(g.Tags, func(i, j int) bool { return g.Tags[i].Date.Before(g.Tags[j].Date) }) ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"c5ee9730044c90c9156ba832d4cf53e0","permalink":"https://falcosuessgott.github.io/dejavu/go/go/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"502bdad9aab5f63d6cd8ee2193901823","permalink":"https://falcosuessgott.github.io/dejavu/kubernetes/","publishdate":"2017-10-17T15:26:15Z","title":"Kubernetes"},{"content":"setup # .bashrc alias k=kubectl export do=\u0026amp;#34;--dry-run=client -o yaml\u0026amp;#34; source .bashrc # .vimrc set tabstop=2 set expandtab # autocompletion source \u0026amp;lt;(kubectl completion bash) complete -F __start_kubectl k # to make it work with the alias k sudo apt-get install bash-completion source ~/.bashrc get context-names $\u0026amp;gt; k config get-contexts -o name create pod on master although NoSchedule apiVersion: v1 kind: Pod metadata: creationTimestamp: null labels: run: pod1 name: pod1 spec: containers: - image: httpd:2.4.41-alpine name: pod1-container  # change resources: {} dnsPolicy: ClusterFirst restartPolicy: Always tolerations: # add - effect: NoSchedule  # add key: node-role.kubernetes.io/master  # add nodeSelector: # add node-role.kubernetes.io/master: \u0026amp;#34;\u0026amp;#34; # add status: {} scale down StatefulSet $\u0026amp;gt; k -n project-c13 scale sts o3db --replicas 1 --record # --record creates an annotation statefulset.apps/o3db scaled liveness \u0026amp;amp; readyness probe apiVersion: v1 kind: Pod metadata: creationTimestamp: null labels: run: ready-if-service-ready name: ready-if-service-ready spec: containers: - image: nginx:1.16.1-alpine name: ready-if-service-ready resources: {} livenessProbe: # add from here exec: command: - \u0026amp;#39;true\u0026amp;#39; readinessProbe: exec: command: - sh - -c - \u0026amp;#39;wget -T2 -O- http://service-am-i-ready:80\u0026amp;#39; # to here dnsPolicy: ClusterFirst restartPolicy: Always status: {} sorting pod by metadata kubectl get pod -A --sort-by=.metadata.creationTimestamp kubectl get pod -A --sort-by=.metadata.uid using volume in deployment apiVersion: apps/v1 kind: Deployment metadata: creationTimestamp: null labels: app: safari name: safari namespace: project-tiger spec: replicas: 1 selector: matchLabels: app: safari strategy: {} template: metadata: creationTimestamp: null labels: app: safari spec: volumes: # add - name: data  # add persistentVolumeClaim: # add claimName: safari-pvc  # add containers: - image: httpd:2.4.41-alpine name: container volumeMounts: # add - …","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"697cc4e6857e2106dced5b55dab37f77","permalink":"https://falcosuessgott.github.io/dejavu/kubernetes/cka/","publishdate":"2017-10-17T15:26:15Z","title":"cka"},{"content":"build X cd kubernetes make WHAT=cmd/kubectl ./_output/bin/kubectl ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"7a47e347334d0e503b8b5ec618dcf49e","permalink":"https://falcosuessgott.github.io/dejavu/kubernetes/contributing/","publishdate":"2017-10-17T15:26:15Z","title":"contributing"},{"content":"etcd leader election  only on master out of all masters is the active (leader) master. the passive master redirect the write requests to the leader they check periodically the connection to each other the leader populates the received write requests to the other master, if the write request were successfully writen on more than 50% of the masters (2 out of 3), then the write operation is considered successfull if the leader goes down, the remaining master elect a new leader, having 3 masters, you can loose one and still be fine  backup etcd $\u0026amp;gt; ETCDCTL_API=3 etcdctl --endpoints https://[127.0.0.1]:2379 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key snapshot save /opt/etcd-backup.db ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"e20b549d6866685671beee63169f421b","permalink":"https://falcosuessgott.github.io/dejavu/kubernetes/etcd/","publishdate":"2017-10-17T15:26:15Z","title":"etcd"},{"content":"  Kubernetes  kubectl  apply changes create objects get multiple objects delete all pods in certain namespace   ooa General  Required Ports control plane Worker Nodes etcd ports default manifest yml get possible defintion options version differences auto generate a manifest   kubectl via ssh jump host Pods  Default Pod ressources create and expose a pod Static Pod   ReplicaSet  update replicaset   Deployments  Create Deployment and scale it   Maintenance  drain a node mark a node as unscheduable   DaemonSets Namespace  get all namespaces change namespace   Service  expose a pod on a specific port Types   DNS  CoreDNS FQDN   etcd Taint \u0026amp;amp; Tolerations  add taint to node remove taint of node tolerant specification   Upgrade  prepare node for upgrades using kubeadm       apply changes kubectl apply -f file.yml create objects kubectl create -f file.yml get multiple objects kubectl get pods,svc,pvc,pv delete all pods in certain namespace for pod in $(kubectl get pods --template \u0026amp;#39;{{range .items}}{{.metadata.name}}{{\u0026amp;#34;\\n\u0026amp;#34;}}{{end}}\u0026amp;#39; -n flux); do kubectl delete pod $pod -n flux; done debug services kubectl run test --image=busybox:1.28 --rm --it -- nc -zvw 2 $SVC $PORT kubectl via ssh jump host  cp .kube/config to local machine change server to localhost:6443 add insecure-skip-tls-verify: true in cluster remove cert ssh 10.25.112.158 -i priv_key -L 6443:localhost:6443  export object kubectl get svc service -o yaml \u0026amp;gt; service.yml run command in container kubectl run temp --image=busybox:1.28 --rm --it -- hostname -f get apiversion kubectl api-versions | grep -i network\ntest kubeconfig  kubectl cluster-info --kubeconfig=$PATH\nget network policy kubectl get netpol # default-deny kubectl describe netpol default-deny kubectl ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"7da13676d2f7fe1050fb5eaa3325b970","permalink":"https://falcosuessgott.github.io/dejavu/kubernetes/kubectl/","publishdate":"2017-10-17T15:26:15Z","title":"kubectl"},{"content":"  Kubernetes  kubectl  apply changes create objects get multiple objects delete all pods in certain namespace   ooa General  Required Ports control plane Worker Nodes etcd ports default manifest yml get possible defintion options version differences auto generate a manifest   kubectl via ssh jump host Pods  Default Pod ressources create and expose a pod Static Pod   ReplicaSet  update replicaset   Deployments  Create Deployment and scale it   Maintenance  drain a node mark a node as unscheduable   DaemonSets Namespace  get all namespaces change namespace   Service  expose a pod on a specific port Types   DNS  CoreDNS FQDN   etcd Taint \u0026amp;amp; Tolerations  add taint to node remove taint of node tolerant specification   Upgrade  prepare node for upgrades using kubeadm       kubectl apply changes kubectl apply -f file.yml create objects kubectl create -f file.yml get multiple objects kubectl get pods,svc,pvc,pv delete all pods in certain namespace for pod in $(kubectl get pods --template \u0026amp;#39;{{range .items}}{{.metadata.name}}{{\u0026amp;#34;\\n\u0026amp;#34;}}{{end}}\u0026amp;#39; -n flux); do kubectl delete pod $pod -n flux; done ooa General Required Ports control plane https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#control-plane-node-s\n   Protocol Direction Port Range Purpose Used by     TCP Inbound 6443 Kubernetes API server All   TCP Inbound 2379-2380 etcd server client API kube-apiserver, etcd   TCP Inbound 10250 Kubelet API Self, Control plane   TCP Inbound 10251 kube-scheduler Self   TCP Inbound 10252 kube-controller-manager Self    Worker Nodes    Protocol Direction Port Range Purpose Used by     TCP Inbound 10250 Kubelet API Self, Control plane   TCP Inbound 30000-32767 NodePort Services All    etcd ports  TCP/2379 for client requests TCP/2380 for peer communication  default manifest yml version: v1 kind: Pod metadata: spec: get possible defintion options kubectl explain pod --recursivce | grep -A5 tolerations version differences kube-api server == …","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"1518c3873ef54df4ce43c9a50964bf08","permalink":"https://falcosuessgott.github.io/dejavu/kubernetes/kubernetes/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"9a4cff60fde6a894338f51ef0f1c62c0","permalink":"https://falcosuessgott.github.io/dejavu/linux/","publishdate":"2017-10-17T15:26:15Z","title":"Linux"},{"content":"Linux   Linux  General  get process listening on port   DNS  Ovierview DNS Records get public ip /etc/nsswitch.conf   RHEL  Change Timezone open port using firewalld list all version of rpm       General get process listening on port lsof -i :8080 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME java 931220 morelly_t1 200u IPv6 3669215 0t0 TCP *:http-alt (LISTEN) DNS Ovierview DNS Records  A-Record: Domain Name -\u0026amp;gt; IPv4 AAAA-Record: Domain-Name -\u0026amp;gt; IPv6 CNAME: Domain-Name -\u0026amp;gt; Domain Name (Alias)  get public ip $\u0026amp;gt; curl ifconfig.me 109.90.5.242 /etc/nsswitch.conf controls the order and which services to use for name resolution\npasswd: files nis group: files nis hosts: files dns myhostname  user information (the passwd and group services) come first from “files” (like /etc/passwd or /etc/group) if no entries are found there, a query to an NIS server (configured elsewhere) Host information first comes from /etc/hosts (files), then a DNS server (dns), and if neither of those work, at least a fallback of “myhostname” so that the local machine has some name  ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"266144fe402d478dceffd852e70dff25","permalink":"https://falcosuessgott.github.io/dejavu/linux/linux/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"94d4b06200ad330ee4e5341577b2df9c","permalink":"https://falcosuessgott.github.io/dejavu/linux/rhel/","publishdate":"2017-10-17T15:26:15Z","title":"RHEL"},{"content":"  Linux  General  get process listening on port   DNS  Ovierview DNS Records get public ip /etc/nsswitch.conf   RHEL  Change Timezone open port using firewalld list all version of rpm       Change Timezone timedatectl list-timezones timedatectl set-timezone Europa/Berlin open port using firewalld sudo firewall-cmd --zone=public --permanent --add-port 6052/tcp sudo firewall-cmd --reload list all version of rpm $\u0026amp;gt; yum list cloud-init --showduplicates Installed Packages cloud-init.x86_64 19.4-7.el7.centos.3 @updates Available Packages cloud-init.x86_64 19.4-7.el7.centos base cloud-init.x86_64 19.4-7.el7.centos.2 updates cloud-init.x86_64 19.4-7.el7.centos.3 update ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"fcfd7df97bc50390503dab934b1e197c","permalink":"https://falcosuessgott.github.io/dejavu/linux/rhel/rhel/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"  RPM  see if rpm files has been changed     see if rpm files has been changed rpm -qa | xargs rpm --verify --nomtime | less ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"0fd6c572da4b9320aec63fe1b01f8820","permalink":"https://falcosuessgott.github.io/dejavu/linux/rhel/rpm/","publishdate":"2017-10-17T15:26:15Z","title":"RPM"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"43c9f2d0f31ce5b405628ba606b38b91","permalink":"https://falcosuessgott.github.io/dejavu/python/","publishdate":"2017-10-17T15:26:15Z","title":"Python"},{"content":"  Python  pip module to rpm short if else     pip module to rpm curl $PIP.tar.gz cd $PIP python3 setup.py bdist_rpm short if else x = \u0026amp;#34;www-data\u0026amp;#34; if distro == \u0026amp;#34;debian\u0026amp;#34; or distro == \u0026amp;#34;ubuntu\u0026amp;#34; else \u0026amp;#34;apache\u0026amp;#34; ","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"96e7e252f1f6c2e586484f825ce644f1","permalink":"https://falcosuessgott.github.io/dejavu/python/python/","publishdate":"2017-10-17T15:26:15Z","title":"General"},{"content":"","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"acff5f3afdd9548b85268149a05a033f","permalink":"https://falcosuessgott.github.io/dejavu/vim/","publishdate":"2017-10-17T15:26:15Z","title":"vim"},{"content":"  Vim  display tab and whitespaces delete everything after cursor     display tab and whitespaces set listset listchars=tab:\u0026amp;gt;-delete everything after cursor :$LINE_NUMBER:dG # delete Global","date":1508253975,"description":"","lastmod":"2017-10-17T15:26:15Z","objectID":"43600700444fe0055e45f19cfe6ceb8a","permalink":"https://falcosuessgott.github.io/dejavu/vim/vim/","publishdate":"2017-10-17T15:26:15Z","title":"General"}]